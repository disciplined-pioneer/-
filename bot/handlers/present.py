from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from core.bot import bot

from bot.keyboards.present import *

router = Router()

# –ù–æ–≤—ã–π –∫–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
class GiftReport(StatesGroup):
    check = State()
    awaiting_event = State()
    awaiting_recipient_info = State()
    awaiting_document_confirmation = State()


# –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏ "2Ô∏è‚É£ –ü–æ–¥–∞—Ä–∫–∏"
@router.callback_query(F.data == "report_gifts")
async def gifts_callback(call: CallbackQuery, state: FSMContext):

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ GiftReport –∏ —É—Å—Ç. —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    data = await state.get_data()
    answers_check = data.get("answers_check", None)
    await state.update_data(answers_check=answers_check)    
    await state.set_state(GiftReport.check)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º
    msg = await call.message.edit_text(
        "üí≠ –í —Å–≤—è–∑–∏ —Å –∫–∞–∫–∏–º —Å–æ–±—ã—Ç–∏–µ–º –±—ã–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, —é–±–∏–ª–µ–π, –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏ —Ç.–¥.) üóì", 
        reply_markup=event_back_keyboard
    )
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    await state.update_data(current_question=0, answers={})
    await state.update_data(bot_message_id=msg.message_id)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏—è
    await state.set_state(GiftReport.awaiting_event)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–±—ã—Ç–∏–∏
@router.message(GiftReport.awaiting_event, F.text)
async def event_message_handler(message: types.Message, state: FSMContext):
    data = await state.get_data()
    answers = data.get("answers", {})

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –æ —Å–æ–±—ã—Ç–∏–∏
    answers["event"] = message.text

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    await state.update_data(answers=answers)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
    await message.delete()
    await bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=data["bot_message_id"],
        text="–î–∞–≤–∞–π—Ç–µ —Å–æ–±–µ—Ä–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö –ø–æ–¥–∞—Ä–∫–æ–≤! üéÅ\n\n"
             "‚Ä¢ üìã –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞] - [–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ] \n\n"
             "–ù–∞–ø—Ä–∏–º–µ—Ä: –û–û–û '–†–æ–º–∞—à–∫–∞' - 10",
        reply_markup=event_back_keyboard
    )

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –æ–∂–∏–¥–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö
    await state.set_state(GiftReport.awaiting_recipient_info)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
@router.message(GiftReport.awaiting_recipient_info, F.text)
async def gifts_recipient_handler(message: types.Message, state: FSMContext):
    data = await state.get_data()
    answers = data.get("answers", {})

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ
    recipient_info = message.text
    answers.setdefault("gifts", []).append(recipient_info)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(answers=answers)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    await message.delete()
    await bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=data["bot_message_id"],
        text=f"–°–ø–∞—Å–∏–±–æ! –í—ã —É–∫–∞–∑–∞–ª–∏:\n\n{recipient_info}\n\nüîÑ –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ?",
        reply_markup=gift_action_keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "üîò –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –ø–æ–¥–∞—Ä–∫–æ–≤"
@router.callback_query(GiftReport.awaiting_recipient_info, F.data == "add_gift_info")
async def add_gift_info_callback(call: CallbackQuery, state: FSMContext):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –≤–≤–æ–¥—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö
    await call.message.edit_text(
        "üìã –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞] - [–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ]\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: –û–û–û '–†–æ–º–∞—à–∫–∞' - 10",
        reply_markup=event_back_keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚úÖ –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –≤—Å—Ç—Ä–µ—á–µ"
@router.callback_query(GiftReport.awaiting_recipient_info, F.data == "gen_documents")
async def gen_documents_callback(call: CallbackQuery, state: FSMContext):

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    gifts_info = "\n".join([f"‚Ä¢ {gift}" for gift in data.get("answers", {}).get("gifts", [])])

    message = f"üìÑ –í—ã –≥–æ—Ç–æ–≤—ã —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç —Å —Å–ª–µ–¥—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:\n\n{gifts_info}\n\nüîÑ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ:"

    await call.message.edit_text(
        message,
        reply_markup=conf_keyboard
    )

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ—Å—Ç–æ—è–Ω–∏—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
    await state.set_state(GiftReport.awaiting_document_confirmation)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
@router.callback_query(GiftReport.awaiting_document_confirmation, F.data == "confirm_document")
async def confirm_document_callback(call: CallbackQuery, state: FSMContext):

    # –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
    message = (
        "–î–æ–∫—É–º–µ–Ω—Ç –ø–æ –≤—Å—Ç—Ä–µ—á–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üìÑ\n\n"
        "‚Ä¢ üìÇ –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª:\n"
        "  ‚Ä¢ –§–∞–π–ª 1: [–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–æ–¥–∞—Ä–∫–æ–≤]\n\n"
        "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á–µ—Ç?"
    )
    data = await state.get_data()
    print(f'\n{data}\n')

    await call.message.edit_text(message, reply_markup=new_expense_keyboard)

    # –í–†–ï–ú–ï–ù–ù–û
    await call.message.answer(f"–î–∞–Ω–Ω—ã–µ –æ —á–µ–∫–µ: {data['answers_check']}\n\n–î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö: {data['answers']['gifts']}")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(GiftReport.awaiting_document_confirmation, F.data == "cancel_document")
async def cancel_document_callback(call: CallbackQuery, state: FSMContext):
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª—è—Ö
    await call.message.edit_text(
        "‚ùå –û—Ç–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n\nüîÑ –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞?",
        reply_markup=gift_info_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚¨ÖÔ∏è –ù–∞–∑–∞–¥" –Ω–∞ —à–∞–≥–µ –æ—Ç—á–µ—Ç–∞
@router.callback_query(F.data == "question_present_back")
async def back_callback(call: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    current_state = await state.get_state()

    print('–ø–æ–ø–∞–ª')

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞
    if current_state == GiftReport.awaiting_event.state:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ —Å–æ–±—ã—Ç–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —ç—Ç–∞–ø "check"
        await state.set_state(GiftReport.check)
        await call.message.edit_text(
            "üí≠ –í —Å–≤—è–∑–∏ —Å –∫–∞–∫–∏–º —Å–æ–±—ã—Ç–∏–µ–º –±—ã–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, —é–±–∏–ª–µ–π, –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏ —Ç.–¥.) üóì", 
            reply_markup=event_back_keyboard
        )
    elif current_state == GiftReport.awaiting_recipient_info.state:
        # –ï—Å–ª–∏ –Ω–∞ —ç—Ç–∞–ø–µ –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ –ø–æ–¥–∞—Ä–∫–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
        await state.set_state(GiftReport.awaiting_event)
        await call.message.edit_text(
            "üí≠ –í —Å–≤—è–∑–∏ —Å –∫–∞–∫–∏–º —Å–æ–±—ã—Ç–∏–µ–º –±—ã–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω—ã –ø–æ–¥–∞—Ä–∫–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, —é–±–∏–ª–µ–π, –ø—Ä–∞–∑–¥–Ω–∏–∫ –∏ —Ç.–¥.) üóì", 
            reply_markup=event_back_keyboard
        )
    elif current_state == GiftReport.awaiting_document_confirmation.state:
        # –ï—Å–ª–∏ –Ω–∞ —ç—Ç–∞–ø–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —ç—Ç–∞–ø –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ
        await state.set_state(GiftReport.awaiting_recipient_info)
        await call.message.edit_text(
            "üìã –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: [–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞] - [–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ]\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: –û–û–û '–†–æ–º–∞—à–∫–∞' - 10",
            reply_markup=gift_info_keyboard
        )
    else:
        # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–∏–º-—Ç–æ –ø—Ä–∏—á–∏–Ω–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –∏–∑–≤–µ—Å—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await call.message.edit_text(
            "‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=gift_info_keyboard
        )
