from datetime import datetime
from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram import F, Router, types
from bot.keyboards.foreign_expenses import *
from bot.templates.foreign_expenses import *
from core.bot import bot


router = Router()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–∞ –≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
@router.callback_query(F.data == "expense_foreign_currency")
async def start_expense(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(ExpenseState.choosing_type)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
    sent_message = await callback.message.edit_text(
        "üìù–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: \"–ø–æ–∫—É–ø–∫–∞\", \"—É—Å–ª—É–≥–∞\", \"–∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞\" –∏ —Ç.–¥. üíº",
        reply_markup=start
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await state.update_data(last_bot_message_id=sent_message.message_id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–∏–ø–∞ —Ä–∞—Å—Ö–æ–¥–∞
@router.message(ExpenseState.choosing_type)
async def process_expense_type(message: types.Message, state: FSMContext):
    await state.update_data(expense_type=message.text)
    await state.set_state(ExpenseState.entering_foreign_amount)

    keyboard = await get_back_keyboard()
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    data = await state.get_data()
    last_bot_message_id = data.get("last_bot_message_id")

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
    sent_message = await bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=last_bot_message_id,
        text="üíµ–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –≤–∞–ª—é—Ç–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Ä–∞—Å—Ö–æ–¥. –ù–∞–ø—Ä–∏–º–µ—Ä: 100 USD, 50 EUR –∏ —Ç.–¥. üí±",
        reply_markup=keyboard
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await state.update_data(last_bot_message_id=sent_message.message_id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
@router.message(ExpenseState.entering_foreign_amount)
async def process_foreign_amount(message: types.Message, state: FSMContext):
    await state.update_data(foreign_amount=message.text)
    await state.set_state(ExpenseState.entering_rub_amount)

    keyboard = await get_back_keyboard()
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    data = await state.get_data()
    last_bot_message_id = data.get("last_bot_message_id")

    sent_message = await bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=last_bot_message_id,
        text="üí≤–°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –æ—Ç—á–µ—Ç:\n"
             "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–∫–ª—é—á–µ–Ω–∞ –≤ –æ—Ç—á–µ—Ç. (–ò—Å–ø–æ–ª—å–∑—É–π –∫—É—Ä—Å –¶–ë –Ω–∞ –¥–∞—Ç—É —Ä–∞—Å—Ö–æ–¥–∞) üìä",
        reply_markup=keyboard
    )

    await state.update_data(last_bot_message_id=sent_message.message_id)


@router.callback_query(F.data == "confirm_foreign")
async def confirm_expense(callback: types.CallbackQuery, state: FSMContext):
    keyboard = await get_finish_keyboard()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è
    await callback.message.edit_text(
        "üéâ –í–∞—à —Ä–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—á–µ—Ç! üéâ\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞, –¥–æ–±–∞–≤–∏–≤ –¥—Ä—É–≥–∏–µ –≤–∏–¥—ã —Ä–∞—Å—Ö–æ–¥–æ–≤.\n"
        "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á–µ—Ç?",
        reply_markup=keyboard
    )
    
    await state.clear()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö
@router.message(ExpenseState.entering_rub_amount)
async def process_rub_amount(message: types.Message, state: FSMContext):
    await state.update_data(rub_amount=message.text)
    await state.set_state(ExpenseState.confirming)

    keyboard = await get_confirm_keyboard()
    await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    data = await state.get_data()
    last_bot_message_id = data.get("last_bot_message_id")

    sent_message = await bot.edit_message_text(
        chat_id=message.chat.id,
        message_id=last_bot_message_id,
        text=(
            f"üìù–î–∞–Ω–Ω—ã–µ –ø–æ —Ä–∞—Å—Ö–æ–¥—É\n"
            f"–¢–∏–ø —Ä–∞—Å—Ö–æ–¥–∞: {data['expense_type']}\n"
            f"–°—É–º–º–∞ –≤ –≤–∞–ª—é—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {data['foreign_amount']}\n"
            f"–°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –æ—Ç—á–µ—Ç: {data['rub_amount']}\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã—à–µ"
        ),
        reply_markup=keyboard
    )

    await state.update_data(last_bot_message_id=sent_message.message_id)

    from db.models.models import Check, User
    user = await User.get(tg_id=message.from_user.id)
    await Check.create(
        user_id=user.id,
        type=data['expense_type'],
        sum=int(data['rub_amount'])*100,
        date=datetime.utcnow()
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –≤ —Ä—É–±–ª—è—Ö



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
@router.callback_query(F.data == "back_foreign")
async def go_back(callback: types.CallbackQuery, state: FSMContext):
    current_state = await state.get_state()
    data = await state.get_data()

    if current_state == ExpenseState.entering_foreign_amount:
        await state.set_state(ExpenseState.choosing_type)
        await callback.message.edit_text(
            "üìù–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: \"–ø–æ–∫—É–ø–∫–∞\", \"—É—Å–ª—É–≥–∞\", \"–∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞\" –∏ —Ç.–¥. üíº"
        )
    elif current_state == ExpenseState.entering_rub_amount:
        keyboard = await get_back_keyboard()
        await state.set_state(ExpenseState.entering_foreign_amount)
        await callback.message.edit_text(
            "üíµ–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –≤–∞–ª—é—Ç–µ, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω —Ä–∞—Å—Ö–æ–¥. –ù–∞–ø—Ä–∏–º–µ—Ä: 100 USD, 50 EUR –∏ —Ç.–¥. üí±",
            reply_markup=keyboard
        )



