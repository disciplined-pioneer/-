from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

qr_service_error_text = """
–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∏—è QR.
"""

incorrect_type_text = """
–ù–µ –≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.
"""

wait_text = """
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —á–µ–∫–µ‚Ä¶
"""

incorrect_qr_text = """
–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–µ.
–ú–æ–∂–µ—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —á–µ–∫–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
"""

send_qr_text = """
–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞, —á—Ç–æ–±—ã –Ω–∞ –Ω–µ–º –±—ã–ª–æ –≤–∏–¥–Ω–æ QR-–∫–æ–¥
"""

send_data_text = """
–ü—Ä–∏—à–ª–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —Å —á–µ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

<–§–ù>
<–§–ü>
<–§–î>
<–î–∞—Ç–∞ —Å —á–µ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–î–î.–ú–ú.–ì–ì –ß–ß:–ú–ú">
<–ò—Ç–æ–≥–æ>
"""

send_date_text = """
–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å —á–µ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –î–î.–ú–ú.–ì–ì –ß–ß:–ú–ú:
"""

send_sum_text = """
–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å —á–µ–∫–∞ –Ω–∞–ø—Ä–∏–º–µ—Ä 157.00 (157 —Ä—É–±–ª–µ–π 00 –∫–æ–ø–µ–µ–∫):
"""

send_fn_text = """
–í–≤–µ–¥–∏—Ç–µ –§–ù
"""

send_fd_text = """
–í–≤–µ–¥–∏—Ç–µ –§–î
"""

send_fp_text = """
–í–≤–µ–¥–∏—Ç–µ –§–ü
"""

success_text = """
–°—Ç–∞—Ç—É—Å —á–µ–∫–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞‚úÖ
–î–∞—Ç–∞ —á–µ–∫–∞: {date}
–§–î: {fd}
–ò—Ç–æ–≥–æ: {sum}
–ù–î–°: {nds}
–°—É–º–º–∞ –±–µ–∑ –ù–î–°: {sum_without_nds}

–î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ —Å —ç—Ç–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
"""


def success_ikb() -> InlineKeyboardMarkup:
    """
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='‚úÖ–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            callback_data='add_check'
        ),
        InlineKeyboardButton(
            text='‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
            callback_data='start'
        )
    )
    builder.adjust(1)
    return builder.as_markup()


incorrect_data_text = """
–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–∫–µ.

–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
–õ–∏–±–æ –º–æ–∂–µ—Ç–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""


def incorrect_data_ikb() -> InlineKeyboardMarkup:
    """
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='‚úÖ–ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ',
            callback_data='confirm_incorrect_data'
        ),
        InlineKeyboardButton(
            text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥',
            callback_data='send_qr'
        ),
        InlineKeyboardButton(
            text='‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
            callback_data='start'
        )
    )
    builder.adjust(1)
    return builder.as_markup()


not_success_text = """
–°—Ç–∞—Ç—É—Å —á–µ–∫–∞: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞‚ùå
–î–∞—Ç–∞ —á–µ–∫–∞: {date}
–§–î: {fd}
–ò—Ç–æ–≥–æ: {sum}

–î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ —Å —ç—Ç–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ
"""


def not_success_ikb() -> InlineKeyboardMarkup:
    """
        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            callback_data='add_check'
        ),
        InlineKeyboardButton(
            text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥',
            callback_data='send_qr'
        ),
        InlineKeyboardButton(
            text='‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
            callback_data='start'
        )
    )
    builder.adjust(1)
    return builder.as_markup()


check_added_text = """
üéâ –í–∞—à —Ä–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—Ç—á–µ—Ç! üéâ

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞, –¥–æ–±–∞–≤–∏–≤ –¥—Ä—É–≥–∏–µ –≤–∏–¥—ã —Ä–∞—Å—Ö–æ–¥–æ–≤.
–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∏–ø —Ä–∞—Å—Ö–æ–¥–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ—Ç—á–µ—Ç?
"""


def check_added_ikb() -> InlineKeyboardMarkup:
    """
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞ –≤ –æ—Ç—á–µ—Ç
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π',
            callback_data='add_check'
        ),
        InlineKeyboardButton(
            text='‚ùå –ù–µ—Ç, –∑–∞–≤–µ—Ä—à–∏—Ç—å –æ—Ç—á–µ—Ç',
            callback_data='create_report'
        )
    )
    builder.adjust(1)
    return builder.as_markup()


class QRState(StatesGroup):
    """ –°–æ—Å—Ç–æ—è–Ω–∏—è """
    qr = State()
    fn = State()
    fp = State()
    fd = State()
    date = State()
    sum = State()


def manual_filling_ikb() -> InlineKeyboardMarkup:
    """
        –ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é –ª–∏–±–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ —á–µ–∫–∞
    :return: InlineKeyboardMarkup
    """
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text='–ó–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ',
            callback_data='check_manual_filling'
        ),
        InlineKeyboardButton(
            text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',
            callback_data='send_qr'
        )
    )
    builder.adjust(1)
    return builder.as_markup()


create_report_text = """
üéâ –í–∞—à –∞–≤–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω! üéâ
–í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ.
"""